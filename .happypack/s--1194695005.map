{"version":3,"sources":["src/configureStore.js"],"names":["reducer","rootReducer","configureStore","middlewares","process","env","NODE_ENV","push"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,UAAU,4BAAgB;AAC5BC;AAD4B,CAAhB,CAAhB;;AAIA,IAAMC,iBAAiB,SAAjBA,cAAiB,GAAM;AACzB,QAAMC,cAAc,sBAApB;;AAEA,QAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCH,oBAAYI,IAAZ,CAAiB,gCAAjB;AACH;;AAED,WAAO,wBACHP,OADG,EAEH,wCAAmBG,WAAnB,CAFG,CAAP;AAIH,CAXD;;kBAaeD,c","file":"configureStore.js","sourceRoot":"/Users/velmyk/dev/projects/losparientes/website/front","sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst reducer = combineReducers({\n    rootReducer,\n});\n\nconst configureStore = () => {\n    const middlewares = [thunk];\n\n    if (process.env.NODE_ENV !== 'production') {\n        middlewares.push(createLogger());\n    }\n\n    return createStore(\n        reducer,\n        applyMiddleware(...middlewares),\n    );\n};\n\nexport default configureStore;\n"]}